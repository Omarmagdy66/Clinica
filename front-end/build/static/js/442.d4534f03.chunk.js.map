{"version":3,"file":"static/js/442.d4534f03.chunk.js","mappings":"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","sources":["pages/ChangePassword.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../styles/profile.css\";\nimport Footer from \"../components/Footer\";\nimport Navbar from \"../components/Navbar\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport { setLoading } from \"../redux/reducers/rootSlice.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loading from \"../components/Loading\";\nimport fetchData from \"../helper/apiCall\";\nimport jwt_decode from \"jwt-decode\";\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\n\nfunction ChangePassword() {\n  const { userId } = jwt_decode(localStorage.getItem(\"token\"));\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state) => state.root);\n  const [file, setFile] = useState(\"\");\n  const [formDetails, setFormDetails] = useState({\n    password: \"\",\n    newpassword: \"\",\n    confnewpassword: \"\",\n  });\n\n  const getUser = async () => {\n    try {\n      dispatch(setLoading(true));\n      const temp = await fetchData(`/user/getuser/${userId}`);\n      setFormDetails({\n        ...temp,\n        password: \"\",\n        newpassword: temp.newpassword === null ? \"\" : temp.newpassword,\n      });\n      setFile(temp.pic);\n      dispatch(setLoading(false));\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n    }\n  };\n\n  useEffect(() => {\n    getUser();\n  }, [dispatch]);\n\n  const inputChange = (e) => {\n    const { name, value } = e.target;\n    setFormDetails({\n      ...formDetails,\n      [name]: value,\n    });\n  };\n\n  const formSubmit = async (e) => {\n    e.preventDefault();\n    const { password, newpassword, confnewpassword } = formDetails;\n    // console.log(formDetails);\n    if (newpassword !== confnewpassword) {\n      return toast.error(\"Passwords do not match\");\n    }\n\n    try {\n      const response = await axios.put(\n        \"/user/changepassword\",\n        {\n          userId: userId,\n          currentPassword: password,\n          newPassword: newpassword,\n          confirmNewPassword: confnewpassword,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        }\n      );\n      // console.log(response.data);\n\n      if (response.data === \"Password changed successfully\") {\n        toast.success(\"Password updated successfully\");\n        setFormDetails({\n          ...formDetails,\n          password: \"\",\n          newpassword: \"\",\n          confnewpassword: \"\",\n        });\n      } else {\n        toast.error(\"Unable to update password\");\n      }\n    } catch (error) {\n      console.error(\"Error updating password:\", error);\n      if (error.response) {\n        toast.error(error.response.data);\n      } else {\n        toast.error(\"Network error. Please try again.\");\n      }\n    }\n  };\n\n  return (\n    <>\n      <Navbar />\n      {loading ? (\n        <Loading />\n      ) : (\n        <section className=\"register-section flex-center\">\n          <div className=\"profile-container flex-center\">\n            <h2 className=\"form-heading\">Profile</h2>\n            <img src={file} alt=\"profile\" className=\"profile-pic\" />\n            <form onSubmit={formSubmit} className=\"register-form\">\n              <div className=\"form-same-row\">\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  className=\"form-input\"\n                  placeholder=\"Enter your current password\"\n                  value={formDetails.password}\n                  onChange={inputChange}\n                />\n              </div>\n              <div className=\"form-same-row\">\n                <input\n                  type=\"password\"\n                  name=\"newpassword\"\n                  className=\"form-input\"\n                  placeholder=\"Enter your new password\"\n                  value={formDetails.newpassword}\n                  onChange={inputChange}\n                />\n                <input\n                  type=\"password\"\n                  name=\"confnewpassword\"\n                  className=\"form-input\"\n                  placeholder=\"Confirm your new password\"\n                  value={formDetails.confnewpassword}\n                  onChange={inputChange}\n                />\n              </div>\n              <button type=\"submit\" className=\"btn form-btn\">\n                Update\n              </button>\n            </form>\n          </div>\n        </section>\n      )}\n      <Footer />\n    </>\n  );\n}\n\nexport default ChangePassword;\n"],"names":["axios","defaults","baseURL","process","userId","jwt_decode","localStorage","getItem","dispatch","useDispatch","loading","useSelector","state","root","file","setFile","useState","formDetails","setFormDetails","password","newpassword","confnewpassword","useEffect","async","setLoading","temp","fetchData","pic","error","console","getUser","inputChange","e","name","value","target","_jsxs","_Fragment","children","_jsx","Navbar","Loading","className","src","alt","onSubmit","preventDefault","toast","put","currentPassword","newPassword","confirmNewPassword","headers","Authorization","data","success","response","type","placeholder","onChange","Footer"],"sourceRoot":""}