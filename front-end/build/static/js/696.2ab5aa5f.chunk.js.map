{"version":3,"file":"static/js/696.2ab5aa5f.chunk.js","mappings":"sNAUAA,EAAAA,EAAMC,SAASC,QAAUC,kCAEzB,MA8IA,EA9IoBC,KAClB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAS,KAChDC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,CAC7CG,iBAAkB,GAClBC,WAAY,GACZC,KAAM,GACNC,IAAK,MAGPC,EAAAA,EAAAA,YAAU,KACqBC,WAC3B,IACE,MAAMC,QAAiBlB,EAAAA,EAAMmB,IAAI,mBACjCX,EAAmBU,EAASE,KAC9B,CAAE,MAAOC,GACPC,QAAQD,MAAM,kCAAmCA,EAEnD,GAGFE,EAAsB,GACrB,IAEH,MAAMC,EAAeC,IACnB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1B,OAAOjB,EAAe,IACjBD,EACH,CAACgB,GAAOC,GACR,EA8CJ,OACEE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACPD,EAAAA,EAAAA,KAAA,WACEE,UAAU,4CACVC,GAAG,UAASJ,UAEZF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,yCAAwCH,SAAA,EACrDC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,eAAcH,SAAC,sBAC7BF,EAAAA,EAAAA,MAAA,QAAMK,UAAU,iBAAgBH,SAAA,EAE9BF,EAAAA,EAAAA,MAAA,UACEH,KAAK,mBACLQ,UAAU,aACVP,MAAOjB,EAAYE,iBACnBwB,SAAUZ,EAAYO,SAAA,EAEtBC,EAAAA,EAAAA,KAAA,UAAQL,MAAM,GAAEI,SAAC,0BAChBxB,EAAgB8B,KAAKC,IACpBN,EAAAA,EAAAA,KAAA,UAAsBL,MAAOW,EAAKH,GAAGJ,SAClCO,EAAKC,oBADKD,EAAKH,UAOtBH,EAAAA,EAAAA,KAAA,SACIQ,KAAK,SACLd,KAAK,aACLQ,UAAU,aACVO,YAAY,8BACZd,MAAOjB,EAAYgC,oBACnBN,SAAUZ,KAEZQ,EAAAA,EAAAA,KAAA,SACEQ,KAAK,SACLd,KAAK,OACLQ,UAAU,aACVO,YAAY,gCACZd,MAAOjB,EAAYI,KACnBsB,SAAUZ,KAEdQ,EAAAA,EAAAA,KAAA,YACEN,KAAK,MACLQ,UAAU,aACVO,YAAY,iBACZd,MAAOjB,EAAYK,IACnBqB,SAAUZ,EACVmB,KAAK,OAIPX,EAAAA,EAAAA,KAAA,UACGQ,KAAK,SACLN,UAAU,eACVU,QAlGI3B,UACfQ,EAAEoB,iBACF,IACE,MAAM,iBAAEjC,EAAgB,WAAEC,EAAU,KAAEC,EAAI,IAAEC,GAAQL,EAGpD,IAAKE,IAAqBC,IAAeC,IAASC,EAChD,OAAO+B,EAAAA,GAAMzB,MAAM,8BAGrB,MAAM0B,EAAc,CAClBnC,iBAAkBoC,SAASpC,GAC3B8B,oBAAqBM,SAASnC,EAAY,IAC1CE,IAAKA,EACLkC,MAAOC,WAAWpC,IAGpBQ,QAAQ6B,IAAIJ,SAEND,EAAAA,GAAMM,QACVpD,EAAAA,EAAMqD,KACJ,2DACAN,EACA,CACEO,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,cAIpD,CACEC,QAAS,uCACTrC,MAAO,oCACPsC,QAAS,kCAIbtD,EAAS,IACX,CAAE,MAAOgB,GACPC,QAAQD,MAAM,oCAAqCA,EAErD,GA0D6BU,SACnB,mBAMRC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,MACN,C","sources":["pages/ApplyDoctor.jsx"],"sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"../styles/contact.css\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Footer from \"../components/Footer\";\r\n\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\r\n\r\nconst ApplyDoctor = () => {\r\n  const navigate = useNavigate();\r\n  const [specializations, setSpecializations] = useState([]); // State to store specializations\r\n  const [formDetails, setFormDetails] = useState({\r\n    specializationId: \"\", // Changed to specializationId\r\n    experience: \"\",\r\n    fees: \"\",\r\n    bio: \"\", // Added bio field\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchSpecializations = async () => {\r\n      try {\r\n        const response = await axios.get(\"/Specialization\"); // Fetch specializations\r\n        setSpecializations(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching specializations:\", error);\r\n        // TODO: Add better error handling, e.g., show a user-friendly error message\r\n      }\r\n    };\r\n\r\n    fetchSpecializations();\r\n  }, []);\r\n\r\n  const inputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    return setFormDetails({\r\n      ...formDetails,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const btnClick = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { specializationId, experience, fees, bio } = formDetails;\r\n\r\n      // Validation (you might want to add more validation here)\r\n      if (!specializationId || !experience || !fees || !bio) {\r\n        return toast.error(\"Please fill in all fields.\");\r\n      }\r\n\r\n      const requestData = {\r\n        specializationId: parseInt(specializationId),\r\n        examinationduration: parseInt(experience, 10), // Convert experience to integer\r\n        bio: bio,\r\n        price: parseFloat(fees), // Convert fees to double\r\n      };\r\n\r\n      console.log(requestData);\r\n      \r\n      await toast.promise(\r\n        axios.post(\r\n          \"https://clinica.runasp.net/api/Doctor/RequestApplyDoctor\", // Updated API endpoint\r\n          requestData,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        ),\r\n        {\r\n          success: \"Doctor application sent successfully\",\r\n          error: \"Unable to send Doctor application\",\r\n          loading: \"Sending doctor application...\",\r\n        }\r\n      );\r\n\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      console.error(\"Error sending doctor application:\", error);\r\n      // TODO: Add better error handling, e.g., show a more specific error message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <section\r\n        className=\"register-section flex-center apply-doctor\"\r\n        id=\"contact\"\r\n      >\r\n        <div className=\"register-container flex-center contact\">\r\n          <h2 className=\"form-heading\">Apply for Doctor</h2>\r\n          <form className=\"register-form \">\r\n            {/* Specialization Dropdown */}\r\n            <select\r\n              name=\"specializationId\"\r\n              className=\"form-input\"\r\n              value={formDetails.specializationId}\r\n              onChange={inputChange}\r\n            >\r\n              <option value=\"\">Select Specialization</option>\r\n              {specializations.map((spec) => (\r\n                <option key={spec.id} value={spec.id}>\r\n                  {spec.specializationName}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            {/* ... (other input fields) */}\r\n            <input\r\n                type=\"number\"\r\n                name=\"experience\"\r\n                className=\"form-input\"\r\n                placeholder=\"Enter examination duration \"\r\n                value={formDetails.examinationduration}\r\n                onChange={inputChange}\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                name=\"fees\"\r\n                className=\"form-input\"\r\n                placeholder=\"Enter your fees  (in dollars)\"\r\n                value={formDetails.fees}\r\n                onChange={inputChange}\r\n              />\r\n            <textarea\r\n              name=\"bio\"\r\n              className=\"form-input\"\r\n              placeholder=\"Enter your bio\"\r\n              value={formDetails.bio}\r\n              onChange={inputChange}\r\n              rows=\"4\" // Increased rows for bio\r\n            />\r\n\r\n            {/* ... (submit button) */}\r\n            <button\r\n               type=\"submit\"\r\n               className=\"btn form-btn\"\r\n               onClick={btnClick}\r\n             >\r\n               apply\r\n             </button>\r\n          </form>\r\n        </div>\r\n      </section>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ApplyDoctor;"],"names":["axios","defaults","baseURL","process","ApplyDoctor","navigate","useNavigate","specializations","setSpecializations","useState","formDetails","setFormDetails","specializationId","experience","fees","bio","useEffect","async","response","get","data","error","console","fetchSpecializations","inputChange","e","name","value","target","_jsxs","_Fragment","children","_jsx","Navbar","className","id","onChange","map","spec","specializationName","type","placeholder","examinationduration","rows","onClick","preventDefault","toast","requestData","parseInt","price","parseFloat","log","promise","post","headers","Authorization","localStorage","getItem","success","loading","Footer"],"sourceRoot":""}