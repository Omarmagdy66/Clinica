{"version":3,"file":"static/js/670.49655123.chunk.js","mappings":"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","sources":["pages/Profile.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/profile.css\";\r\nimport Footer from \"../components/Footer\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport { setLoading } from \"../redux/reducers/rootSlice.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loading from \"../components/Loading\";\r\nimport fetchData from \"../helper/apiCall\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\r\n\r\nfunction Profile() {\r\n  const userId = jwtDecode(localStorage.getItem(\"token\")).id;\r\n  console.log(userId);\r\n\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.root);\r\n  const [specializations, setSpecializations] = useState([]); // State to store specializations\r\n  const [formDetails, setFormDetails] = useState({\r\n    specializationId: \"\",\r\n    examinationduration: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    bio: \"\",\r\n    price: 0,\r\n    password: \"\",\r\n    confpassword: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchSpecializations = async () => {\r\n      try {\r\n        const response = await axios.get(\"/Specialization\");\r\n        setSpecializations(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching specializations:\", error);\r\n        // TODO: Add better error handling, e.g., show a user-friendly error message\r\n      }\r\n    };\r\n\r\n    fetchSpecializations();\r\n  }, []);\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      const temp = await fetchData(`/Doctor/GetDoctorById?id=${userId}`); // Updated API endpoint\r\n\r\n      setFormDetails({\r\n        specializationId: temp.specializationId || \"\",\r\n        examinationduration: temp.examinationduration || \"\",\r\n        name: temp.name || \"\",\r\n        email: temp.email || \"\",\r\n        phoneNumber: temp.phoneNumber || \"\",\r\n        bio: temp.bio || \"\",\r\n        price: temp.price || null,\r\n        password: \"\",\r\n        confpassword: \"\",\r\n      });\r\n      dispatch(setLoading(false));\r\n    } catch (error) {\r\n      console.error(\"Error fetching doctor data:\", error);\r\n      // TODO: Add better error handling, e.g., show a user-friendly error message\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, [dispatch]);\r\n\r\n  const inputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    return setFormDetails({\r\n      ...formDetails,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const formSubmit = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      const { specializationId, examinationduration, name, email, password, phoneNumber, bio, price, confpassword } = formDetails;\r\n\r\n      // // Validation\r\n      // if (!email) {\r\n      //   return toast.error(\"Email should not be empty\");\r\n      // } else if (name.length < 3) {\r\n      //   return toast.error(\"Name must be at least 3 characters long\");\r\n      // } else\r\n      if(password.length>0){\r\n      if (password.length < 5) {\r\n        return toast.error(\"Password must be at least 5 characters long\");\r\n      } else if (password !== confpassword) {\r\n        return toast.error(\"Passwords do not match\");\r\n      }\r\n    }\r\n\r\n      const updatedData = {\r\n        specializationId: specializationId,\r\n        examinationduration: examinationduration,\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n        phoneNumber: phoneNumber,\r\n        bio: bio,\r\n        price: price,\r\n      };\r\n\r\n      await toast.promise(\r\n        axios.put(\r\n          \"/Doctor/EditDoctor\", // Updated API endpoint\r\n          updatedData,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        ),\r\n        {\r\n          pending: \"Updating profile...\",\r\n          success: \"Profile updated successfully\",\r\n          error: \"Unable to update profile\",\r\n          loading: \"Updating profile...\",\r\n        }\r\n      );\r\n\r\n      setFormDetails({ ...formDetails, password: \"\", confpassword: \"\" });\r\n    } catch (error) {\r\n      console.error(\"Error updating profile:\", error);\r\n      // TODO: Add better error handling, e.g., show a more specific error message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <section className=\"register-section flex-center\">\r\n          <div className=\"profile-container flex-center\">\r\n            <h2 className=\"form-heading\">Profile</h2>\r\n            {/* ... (image element - you might need to adjust this) */}\r\n            <form onSubmit={formSubmit} className=\"register-form\">\r\n              {/* Specialization Dropdown */}\r\n              <div className=\"form-same-row\">\r\n                <select\r\n                  name=\"specializationId\"\r\n                  className=\"form-input\"\r\n                  value={formDetails.specializationId}\r\n                  onChange={inputChange}\r\n                >\r\n                  <option value=\"\">Select Specialization</option>\r\n                  {specializations.map((spec) => (\r\n                    <option key={spec.id} value={spec.id}>\r\n                      {spec.specializationName}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-same-row\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  className=\"form-input\"\r\n                  placeholder=\"Enter your full name\"\r\n                  value={formDetails.name}\r\n                  onChange={inputChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-same-row\">\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  className=\"form-input\"\r\n                  placeholder=\"Enter your email\"\r\n                  value={formDetails.email}\r\n                  onChange={inputChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-same-row\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"phoneNumber\" // Changed to phoneNumber\r\n                  className=\"form-input\"\r\n                  placeholder=\"Enter your mobile number\"\r\n                  value={formDetails.phoneNumber}\r\n                  onChange={inputChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-same-row\">\r\n                <input\r\n                  type=\"number\" // Changed to number input\r\n                  name=\"examinationduration\" // Changed to examinationduration\r\n                  className=\"form-input\"\r\n                  placeholder=\"Enter your examination duration\"\r\n                  value={formDetails.examinationduration}\r\n                  onChange={inputChange}\r\n                />\r\n              </div>\r\n              <textarea\r\n                type=\"text\"\r\n                name=\"bio\"\r\n                className=\"form-input\"\r\n                placeholder=\"Enter your bio\"\r\n                value={formDetails.bio}\r\n                onChange={inputChange}\r\n                rows=\"2\"\r\n              ></textarea>\r\n              <div className=\"form-same-row\">\r\n                <input\r\n                  type=\"number\" // Changed to number input\r\n                  name=\"price\"\r\n                  className=\"form-input\"\r\n                  placeholder=\"Enter your price\"\r\n                  value={formDetails.price}\r\n                  onChange={inputChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-same-row\">\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  className=\"form-input\"\r\n                  placeholder=\"Enter your password\"\r\n                  value={formDetails.password}\r\n                  onChange={inputChange}\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"confpassword\"\r\n                  className=\"form-input\"\r\n                  placeholder=\"Confirm your password\"\r\n                  value={formDetails.confpassword}\r\n                  onChange={inputChange}\r\n                />\r\n              </div>\r\n              <button type=\"submit\" className=\"btn form-btn\">\r\n                update\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </section>\r\n      )}\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;"],"names":["axios","defaults","baseURL","process","userId","jwtDecode","localStorage","getItem","id","console","log","dispatch","useDispatch","loading","useSelector","state","root","specializations","setSpecializations","useState","formDetails","setFormDetails","specializationId","examinationduration","name","email","phoneNumber","bio","price","password","confpassword","useEffect","async","response","get","data","error","fetchSpecializations","setLoading","temp","fetchData","getUser","inputChange","e","value","target","_jsxs","_Fragment","children","_jsx","Navbar","Loading","className","onSubmit","preventDefault","length","toast","updatedData","promise","put","headers","Authorization","pending","success","onChange","map","spec","specializationName","type","placeholder","rows","Footer"],"sourceRoot":""}