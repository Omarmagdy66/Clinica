{"version":3,"file":"static/js/696.c7c875de.chunk.js","mappings":"sNASAA,EAAAA,EAAMC,SAASC,QAAUC,iCAEzB,MA8IA,EA9IoBC,KAClB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAS,KAChDC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,CAC7CG,iBAAkB,GAClBC,WAAY,GACZC,KAAM,GACNC,IAAK,MAGPC,EAAAA,EAAAA,YAAU,KACqBC,WAC3B,IACE,MAAMC,QAAiBlB,EAAAA,EAAMmB,IAAI,mBACjCX,EAAmBU,EAASE,KAC9B,CAAE,MAAOC,GACPC,QAAQD,MAAM,kCAAmCA,EAEnD,GAGFE,EAAsB,GACrB,IAEH,MAAMC,EAAeC,IACnB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1B,OAAOjB,EAAe,IACjBD,EACH,CAACgB,GAAOC,GACR,EA8CJ,OACEE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACPD,EAAAA,EAAAA,KAAA,WACEE,UAAU,4CACVC,GAAG,UAASJ,UAEZF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,yCAAwCH,SAAA,EACrDC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,eAAcH,SAAC,sBAC7BF,EAAAA,EAAAA,MAAA,QAAMK,UAAU,iBAAgBH,SAAA,EAE9BF,EAAAA,EAAAA,MAAA,UACEH,KAAK,mBACLQ,UAAU,aACVP,MAAOjB,EAAYE,iBACnBwB,SAAUZ,EAAYO,SAAA,EAEtBC,EAAAA,EAAAA,KAAA,UAAQL,MAAM,GAAEI,SAAC,0BAChBxB,EAAgB8B,KAAKC,IACpBN,EAAAA,EAAAA,KAAA,UAAsBL,MAAOW,EAAKH,GAAGJ,SAClCO,EAAKC,oBADKD,EAAKH,UAOtBH,EAAAA,EAAAA,KAAA,SACIQ,KAAK,SACLd,KAAK,aACLQ,UAAU,aACVO,YAAY,8BACZd,MAAOjB,EAAYgC,oBACnBN,SAAUZ,KAEZQ,EAAAA,EAAAA,KAAA,SACEQ,KAAK,SACLd,KAAK,OACLQ,UAAU,aACVO,YAAY,gCACZd,MAAOjB,EAAYI,KACnBsB,SAAUZ,KAEdQ,EAAAA,EAAAA,KAAA,YACEN,KAAK,MACLQ,UAAU,aACVO,YAAY,iBACZd,MAAOjB,EAAYK,IACnBqB,SAAUZ,EACVmB,KAAK,OAIPX,EAAAA,EAAAA,KAAA,UACGQ,KAAK,SACLN,UAAU,eACVU,QAlGI3B,UACfQ,EAAEoB,iBACF,IACE,MAAM,iBAAEjC,EAAgB,WAAEC,EAAU,KAAEC,EAAI,IAAEC,GAAQL,EAGpD,IAAKE,IAAqBC,IAAeC,IAASC,EAChD,OAAO+B,EAAAA,GAAMzB,MAAM,8BAGrB,MAAM0B,EAAc,CAClBnC,iBAAkBoC,SAASpC,GAC3B8B,oBAAqBM,SAASnC,EAAY,IAC1CE,IAAKA,EACLkC,MAAOC,WAAWpC,IAGpBQ,QAAQ6B,IAAIJ,SAEND,EAAAA,GAAMM,QACVpD,EAAAA,EAAMqD,KACJ,0DACAN,EACA,CACEO,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,cAIpD,CACEC,QAAS,uCACTrC,MAAO,oCACPsC,QAAS,kCAIbtD,EAAS,IACX,CAAE,MAAOgB,GACPC,QAAQD,MAAM,oCAAqCA,EAErD,GA0D6BU,SACnB,mBAMRC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,MACN,C","sources":["pages/ApplyDoctor.jsx"],"sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/contact.css\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport { useNavigate } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\nimport Footer from \"../components/Footer\";\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\n\nconst ApplyDoctor = () => {\n  const navigate = useNavigate();\n  const [specializations, setSpecializations] = useState([]); // State to store specializations\n  const [formDetails, setFormDetails] = useState({\n    specializationId: \"\", // Changed to specializationId\n    experience: \"\",\n    fees: \"\",\n    bio: \"\", // Added bio field\n  });\n\n  useEffect(() => {\n    const fetchSpecializations = async () => {\n      try {\n        const response = await axios.get(\"/Specialization\"); // Fetch specializations\n        setSpecializations(response.data);\n      } catch (error) {\n        console.error(\"Error fetching specializations:\", error);\n        // TODO: Add better error handling, e.g., show a user-friendly error message\n      }\n    };\n\n    fetchSpecializations();\n  }, []);\n\n  const inputChange = (e) => {\n    const { name, value } = e.target;\n    return setFormDetails({\n      ...formDetails,\n      [name]: value,\n    });\n  };\n\n  const btnClick = async (e) => {\n    e.preventDefault();\n    try {\n      const { specializationId, experience, fees, bio } = formDetails;\n\n      // Validation (you might want to add more validation here)\n      if (!specializationId || !experience || !fees || !bio) {\n        return toast.error(\"Please fill in all fields.\");\n      }\n\n      const requestData = {\n        specializationId: parseInt(specializationId),\n        examinationduration: parseInt(experience, 10), // Convert experience to integer\n        bio: bio,\n        price: parseFloat(fees), // Convert fees to double\n      };\n\n      console.log(requestData);\n      \n      await toast.promise(\n        axios.post(\n          \"https://clinica.runasp.net/api/Doctor/RequestApplyDoctor\", // Updated API endpoint\n          requestData,\n          {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n            },\n          }\n        ),\n        {\n          success: \"Doctor application sent successfully\",\n          error: \"Unable to send Doctor application\",\n          loading: \"Sending doctor application...\",\n        }\n      );\n\n      navigate(\"/\");\n    } catch (error) {\n      console.error(\"Error sending doctor application:\", error);\n      // TODO: Add better error handling, e.g., show a more specific error message\n    }\n  };\n\n  return (\n    <>\n      <Navbar />\n      <section\n        className=\"register-section flex-center apply-doctor\"\n        id=\"contact\"\n      >\n        <div className=\"register-container flex-center contact\">\n          <h2 className=\"form-heading\">Apply for Doctor</h2>\n          <form className=\"register-form \">\n            {/* Specialization Dropdown */}\n            <select\n              name=\"specializationId\"\n              className=\"form-input\"\n              value={formDetails.specializationId}\n              onChange={inputChange}\n            >\n              <option value=\"\">Select Specialization</option>\n              {specializations.map((spec) => (\n                <option key={spec.id} value={spec.id}>\n                  {spec.specializationName}\n                </option>\n              ))}\n            </select>\n\n            {/* ... (other input fields) */}\n            <input\n                type=\"number\"\n                name=\"experience\"\n                className=\"form-input\"\n                placeholder=\"Enter examination duration \"\n                value={formDetails.examinationduration}\n                onChange={inputChange}\n              />\n              <input\n                type=\"number\"\n                name=\"fees\"\n                className=\"form-input\"\n                placeholder=\"Enter your fees  (in dollars)\"\n                value={formDetails.fees}\n                onChange={inputChange}\n              />\n            <textarea\n              name=\"bio\"\n              className=\"form-input\"\n              placeholder=\"Enter your bio\"\n              value={formDetails.bio}\n              onChange={inputChange}\n              rows=\"4\" // Increased rows for bio\n            />\n\n            {/* ... (submit button) */}\n            <button\n               type=\"submit\"\n               className=\"btn form-btn\"\n               onClick={btnClick}\n             >\n               apply\n             </button>\n          </form>\n        </div>\n      </section>\n      <Footer />\n    </>\n  );\n};\n\nexport default ApplyDoctor;"],"names":["axios","defaults","baseURL","process","ApplyDoctor","navigate","useNavigate","specializations","setSpecializations","useState","formDetails","setFormDetails","specializationId","experience","fees","bio","useEffect","async","response","get","data","error","console","fetchSpecializations","inputChange","e","name","value","target","_jsxs","_Fragment","children","_jsx","Navbar","className","id","onChange","map","spec","specializationName","type","placeholder","examinationduration","rows","onClick","preventDefault","toast","requestData","parseInt","price","parseFloat","log","promise","post","headers","Authorization","localStorage","getItem","success","loading","Footer"],"sourceRoot":""}